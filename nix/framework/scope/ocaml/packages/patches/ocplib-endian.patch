diff -ur a/src/common.ml b/src/common.ml
--- a/src/common.ml	2019-08-22 06:17:33.862381401 +0000
+++ b/src/common.ml	2019-08-22 06:18:09.540456875 +0000
@@ -12,7 +12,7 @@
   ((get_uint8 s off) lsl ( Sys.word_size - 9 )) asr ( Sys.word_size - 9 )
 let set_int8 s off v =
   (* It is ok to cast using unsafe_chr because both String.set
-     and Bigarray.Array1.set (on bigstrings) use the 'store unsigned int8'
+     and Bigarray_compat.Array1.set (on bigstrings) use the 'store unsigned int8'
      primitives that effectively extract the bits before writing *)
   set_char s off (Char.unsafe_chr v)
 
diff -ur a/src/dune b/src/dune
--- a/src/dune	2019-08-22 06:17:33.862381401 +0000
+++ b/src/dune	2019-08-22 06:18:02.053434436 +0000
@@ -72,4 +72,4 @@
  (wrapped false)
  (modules endianBigstring)
  (ocamlopt_flags (:standard -inline 1000))
- (libraries ocplib_endian bigarray bytes))
+ (libraries ocplib_endian bigarray-compat bytes))
diff -ur a/src/endianBigstring.cppo.ml b/src/endianBigstring.cppo.ml
--- a/src/endianBigstring.cppo.ml	2019-08-22 06:17:33.862381401 +0000
+++ b/src/endianBigstring.cppo.ml	2019-08-22 06:18:09.537456470 +0000
@@ -15,7 +15,7 @@
 (*                                                                      *)
 (************************************************************************)
 
-open Bigarray
+open Bigarray_compat
 
 type bigstring = (char, int8_unsigned_elt, c_layout) Array1.t
 
diff -ur a/src/endianBigstring.cppo.mli b/src/endianBigstring.cppo.mli
--- a/src/endianBigstring.cppo.mli	2019-08-22 06:17:33.862381401 +0000
+++ b/src/endianBigstring.cppo.mli	2019-08-22 06:18:09.537456470 +0000
@@ -15,7 +15,7 @@
 (*                                                                      *)
 (************************************************************************)
 
-open Bigarray
+open Bigarray_compat
 type bigstring = (char, int8_unsigned_elt, c_layout) Array1.t
 
 module type EndianBigstringSig = sig
diff -ur a/tests/bench.ml b/tests/bench.ml
--- a/tests/bench.ml	2019-08-22 06:17:33.864381700 +0000
+++ b/tests/bench.ml	2019-08-22 06:18:09.535456200 +0000
@@ -225,76 +225,76 @@
   open EndianBigstring
   module BE = BigEndian
   module LE = LittleEndian
-  open Bigarray
+  open Bigarray_compat
   let buffer = Array1.create char c_layout buffer_size
 
   let loop_read_uint16_be () =
-    for i = 0 to Bigarray.Array1.dim buffer - 2 do
+    for i = 0 to Bigarray_compat.Array1.dim buffer - 2 do
       ignore(BE.get_uint16 buffer i)
     done
 
   let loop_read_uint16_le () =
-    for i = 0 to Bigarray.Array1.dim buffer - 2 do
+    for i = 0 to Bigarray_compat.Array1.dim buffer - 2 do
       ignore(LE.get_uint16 buffer i)
     done
 
   let loop_read_int16_be () =
-    for i = 0 to Bigarray.Array1.dim buffer - 2 do
+    for i = 0 to Bigarray_compat.Array1.dim buffer - 2 do
       ignore(BE.get_int16 buffer i)
     done
 
   let loop_read_int16_le () =
-    for i = 0 to Bigarray.Array1.dim buffer - 2 do
+    for i = 0 to Bigarray_compat.Array1.dim buffer - 2 do
       ignore(LE.get_int16 buffer i)
     done
 
   let loop_read_int32_be () =
-    for i = 0 to Bigarray.Array1.dim buffer - 4 do
+    for i = 0 to Bigarray_compat.Array1.dim buffer - 4 do
       ignore(Int32.to_int (BE.get_int32 buffer i))
     done
 
   let loop_read_int32_le () =
-    for i = 0 to Bigarray.Array1.dim buffer - 4 do
+    for i = 0 to Bigarray_compat.Array1.dim buffer - 4 do
       ignore(Int32.to_int (LE.get_int32 buffer i))
     done
 
   let loop_read_int64_be () =
-    for i = 0 to Bigarray.Array1.dim buffer - 8 do
+    for i = 0 to Bigarray_compat.Array1.dim buffer - 8 do
       ignore(Int64.to_int (BE.get_int64 buffer i))
     done
 
   let loop_read_int64_le () =
-    for i = 0 to Bigarray.Array1.dim buffer - 8 do
+    for i = 0 to Bigarray_compat.Array1.dim buffer - 8 do
       ignore(Int64.to_int (LE.get_int64 buffer i))
     done
 
   let loop_write_int16_be () =
-    for i = 0 to Bigarray.Array1.dim buffer - 2 do
+    for i = 0 to Bigarray_compat.Array1.dim buffer - 2 do
       ignore(BE.set_int16 buffer i 10)
     done
 
   let loop_write_int16_le () =
-    for i = 0 to Bigarray.Array1.dim buffer - 2 do
+    for i = 0 to Bigarray_compat.Array1.dim buffer - 2 do
       ignore(LE.set_int16 buffer i 10)
     done
 
   let loop_write_int32_be () =
-    for i = 0 to Bigarray.Array1.dim buffer - 4 do
+    for i = 0 to Bigarray_compat.Array1.dim buffer - 4 do
       ignore((BE.set_int32 buffer i) 10l)
     done
 
   let loop_write_int32_le () =
-    for i = 0 to Bigarray.Array1.dim buffer - 4 do
+    for i = 0 to Bigarray_compat.Array1.dim buffer - 4 do
       ignore((LE.set_int32 buffer i) 10l)
     done
 
   let loop_write_int64_be () =
-    for i = 0 to Bigarray.Array1.dim buffer - 8 do
+    for i = 0 to Bigarray_compat.Array1.dim buffer - 8 do
       ignore((BE.set_int64 buffer i) 10L)
     done
 
   let loop_write_int64_le () =
-    for i = 0 to Bigarray.Array1.dim buffer - 8 do
+    for i = 0 to Bigarray_compat.Array1.dim buffer - 8 do
       ignore((LE.set_int64 buffer i) 10L)
     done
 
@@ -327,76 +327,76 @@
   open EndianBigstring
   module BE = BigEndian_unsafe
   module LE = LittleEndian_unsafe
-  open Bigarray
+  open Bigarray_compat
   let buffer = Array1.create char c_layout buffer_size
 
   let loop_read_uint16_be () =
-    for i = 0 to Bigarray.Array1.dim buffer - 2 do
+    for i = 0 to Bigarray_compat.Array1.dim buffer - 2 do
       ignore(BE.get_uint16 buffer i)
     done
 
   let loop_read_uint16_le () =
-    for i = 0 to Bigarray.Array1.dim buffer - 2 do
+    for i = 0 to Bigarray_compat.Array1.dim buffer - 2 do
       ignore(LE.get_uint16 buffer i)
     done
 
   let loop_read_int16_be () =
-    for i = 0 to Bigarray.Array1.dim buffer - 2 do
+    for i = 0 to Bigarray_compat.Array1.dim buffer - 2 do
       ignore(BE.get_int16 buffer i)
     done
 
   let loop_read_int16_le () =
-    for i = 0 to Bigarray.Array1.dim buffer - 2 do
+    for i = 0 to Bigarray_compat.Array1.dim buffer - 2 do
       ignore(LE.get_int16 buffer i)
     done
 
   let loop_read_int32_be () =
-    for i = 0 to Bigarray.Array1.dim buffer - 4 do
+    for i = 0 to Bigarray_compat.Array1.dim buffer - 4 do
       ignore(Int32.to_int (BE.get_int32 buffer i))
     done
 
   let loop_read_int32_le () =
-    for i = 0 to Bigarray.Array1.dim buffer - 4 do
+    for i = 0 to Bigarray_compat.Array1.dim buffer - 4 do
       ignore(Int32.to_int (LE.get_int32 buffer i))
     done
 
   let loop_read_int64_be () =
-    for i = 0 to Bigarray.Array1.dim buffer - 8 do
+    for i = 0 to Bigarray_compat.Array1.dim buffer - 8 do
       ignore(Int64.to_int (BE.get_int64 buffer i))
     done
 
   let loop_read_int64_le () =
-    for i = 0 to Bigarray.Array1.dim buffer - 8 do
+    for i = 0 to Bigarray_compat.Array1.dim buffer - 8 do
       ignore(Int64.to_int (LE.get_int64 buffer i))
     done
 
   let loop_write_int16_be () =
-    for i = 0 to Bigarray.Array1.dim buffer - 2 do
+    for i = 0 to Bigarray_compat.Array1.dim buffer - 2 do
       ignore(BE.set_int16 buffer i 10)
     done
 
   let loop_write_int16_le () =
-    for i = 0 to Bigarray.Array1.dim buffer - 2 do
+    for i = 0 to Bigarray_compat.Array1.dim buffer - 2 do
       ignore(LE.set_int16 buffer i 10)
     done
 
   let loop_write_int32_be () =
-    for i = 0 to Bigarray.Array1.dim buffer - 4 do
+    for i = 0 to Bigarray_compat.Array1.dim buffer - 4 do
       ignore((BE.set_int32 buffer i) 10l)
     done
 
   let loop_write_int32_le () =
-    for i = 0 to Bigarray.Array1.dim buffer - 4 do
+    for i = 0 to Bigarray_compat.Array1.dim buffer - 4 do
       ignore((LE.set_int32 buffer i) 10l)
     done
 
   let loop_write_int64_be () =
-    for i = 0 to Bigarray.Array1.dim buffer - 8 do
+    for i = 0 to Bigarray_compat.Array1.dim buffer - 8 do
       ignore((BE.set_int64 buffer i) 10L)
     done
 
   let loop_write_int64_le () =
-    for i = 0 to Bigarray.Array1.dim buffer - 8 do
+    for i = 0 to Bigarray_compat.Array1.dim buffer - 8 do
       ignore((LE.set_int64 buffer i) 10L)
     done
 
diff -ur a/tests/test_bigstring.cppo.ml b/tests/test_bigstring.cppo.ml
--- a/tests/test_bigstring.cppo.ml	2019-08-22 06:17:33.864381700 +0000
+++ b/tests/test_bigstring.cppo.ml	2019-08-22 06:18:09.535456200 +0000
@@ -1,4 +1,4 @@
-open Bigarray
+open Bigarray_compat
 open EndianBigstring
 
 [@@@warning "-52-53"]
